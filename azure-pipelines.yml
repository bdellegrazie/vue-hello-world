# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  displayName: 'Install NodeJS'
  inputs:
    versionSpec: '10.x'
- task: Npm@1
  displayName: 'Install NodeJS Dependencies'
  inputs:
    command: custom
    customCommand: ci

- task: Npm@1
  displayName: 'Lint'
  continueOnError: true
  inputs:
    command: custom
    customCommand: 'run lint -- --format junit --output-file test/unit/coverage/lint.xml'
- task: PublishTestResults@2
  displayName: 'Lint Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'test/unit/coverage/lint.xml'
    testRunTitle: 'Lint'
- task: Npm@1
  displayName: 'Build App'
  inputs:
    command: custom
    customCommand: build
- task: Npm@1
  displayName: 'Unit Tests'
  inputs:
    command: custom
    customCommand: 'run unit -- --ci'
- task: PublishCodeCoverageResults@1
  displayName: 'Unit Test Coverage'
  condition: succeededOrFailed()
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: 'test/unit/coverage/*coverage.xml'
- task: PublishTestResults@2
  displayName: 'Unit Test Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'test/unit/coverage/junit.xml'
    testRunTitle: 'Unit'
- task: Npm@1
  displayName: 'E2E Tests'
  inputs:
    command: custom
    customCommand: 'run e2e'
- task: PublishTestResults@2
  displayName: 'E2E Test Results'
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: 'test/e2e/reports/**.xml'
    testRunTitle: 'E2E'
